import os
from langchain_groq import ChatGroq
from langchain.schema import HumanMessage, SystemMessage

# 1. Configurez votre cl√© API Groq (2 m√©thodes possibles)

# M√©thode 1 : D√©finir la variable d'environnement (recommand√©)
os.environ["GROQ_API_KEY"] = "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"  # Remplacez par votre vraie cl√©

# M√©thode 2 : Ou passez la cl√© directement au client
# chat_model = ChatGroq(api_key="votre_cl√©_api_groq_ici", ...)

# 2. Initialisation du mod√®le Groq
chat_model = ChatGroq(
    model="llama3-70b-8192",
    temperature=0.7,
    max_tokens=500,
)

# 3. D√©finition du message syst√®me
system_message = SystemMessage(
    content="You are a friendly pirate who loves to share knowledge. Always respond in pirate speech, use pirate slang, and include plenty of nautical references. Add relevant emojis throughout your responses to make them more engaging. Arr! ‚ò†Ô∏èüè¥‚Äç‚ò†Ô∏è"
)

# 4. D√©finition de la question
question = "What are the 7 wonders of the world?"

# 5. Cr√©ation des messages
messages = [
    system_message,
    HumanMessage(content=question)
]

# 6. Obtention de la r√©ponse
try:
    response = chat_model.invoke(messages)
    
    # 7. Affichage de la r√©ponse
    print("\nQuestion:", question)
    print("\nPirate Response:")
    print(response.content)
    
except Exception as e:
    print(f"Erreur: {str(e)}")
    print("V√©rifiez que:")
    print("1. Votre cl√© API Groq est valide")
    print("2. Le mod√®le sp√©cifi√© existe")
    print("3. Vous √™tes connect√© √† internet")